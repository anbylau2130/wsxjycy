
@model USP.Models.Entity.WebDeptDuty
@{
    ViewBag.Title = "Add";
}

@*@section themes{
        <link href="~/Static/Css/usp.webdeptduty.add.css" rel="stylesheet" />
    }*@
<div class="easyui-panel" style="width: 100%; height: 100%">

    <div class="panel panel-info">
        <div class="panel-heading">
            新增
            <button id="btnReturn" type="button" class="btn btn-primary btn-xs pull-right">返回</button>
        </div>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HiddenFor(model => model.Reserve, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HiddenFor(model => model.Creator, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HiddenFor(model => model.CreateTime, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HiddenFor(model => model.Auditor, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HiddenFor(model => model.AuditTime, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HiddenFor(model => model.Canceler, new { htmlAttributes = new { @class = "form-control" } })
        @Html.HiddenFor(model => model.CancelTime, new { htmlAttributes = new { @class = "form-control" } })
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      
            <div class="form-group">
                @Html.LabelFor(model => model.DeptName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.DeptName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeptName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.DeptDuty, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    @Html.TextAreaFor(model => model.DeptDuty, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeptDuty, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                </div>
            </div>
           
            <div class="form-group form-actions">
                <div class="col-md-offset-2 col-xs-1 ">
                    <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-plus"></span>添加</button>
                </div>
            </div>
        </div>
    }
</div>
@section scripts{
    <script src="~/Static/Js/usp.webdeptduty.add.js"></script>
    <script type="text/javascript">
    (function () {
        usp.namespace("usp.webdeptduty.add");

        usp.webdeptduty.add = {
            init : function (btnReturnId,basePage) {
                usp.webdeptduty.add.eventInit.btnReturnInit(btnReturnId, basePage);
            },
            eventInit: {
                btnReturnInit: function (id,basePage) {
                    $(id).on("click", function () {
                        location.href = basePage;
                        return false;
                    });
                }
            }
        }
    })(this);

    $(function () {
        usp.init();
        KindEditor.ready(function (K) {
            window.editor = K.create("#DeptDuty", {
                resizeType: 1,
                allowPreviewEmoticons: false,
                allowImageUpload: true,//允许上传图片
                allowFileManager: true, //允许对上传图片进行管理
                uploadJson: '../../KindEdit/Upload', //上传图片的java代码，只不过放在jsp中
                fileManagerJson: '../../KindEdit/FileManager',
                afterUpload: function () { this.sync(); }, //图片上传后，将上传内容同步到textarea中
                afterBlur: function () { this.sync(); },   ////失去焦点时，将上传内容同步到textarea中
                items: [
                    'source', '|', 'undo', 'redo', '|', 'preview', 'print', 'template', 'code', 'cut', 'copy', 'paste',
                    'plainpaste', 'wordpaste', '|', 'justifyleft', 'justifycenter', 'justifyright',
                     'insertorderedlist', 'insertunorderedlist', 'indent', 'outdent', 'subscript',
                    'superscript', 'clearhtml', 'quickformat', 'selectall', '|', 'fullscreen', '/',
                    'formatblock', 'fontname', 'fontsize', '|', 'forecolor', 'hilitecolor', 'bold',
                    'italic', 'underline', 'strikethrough', 'lineheight', 'removeformat', '|', 'image', 'multiimage',
                    'flash', 'media', 'insertfile', 'table', 'hr', 'emoticons', 'baidumap', 'pagebreak',
                    'anchor', 'link', 'unlink', 'justifyfull', ]
            });
        });
        usp.webdeptduty.add.init("#btnReturn", "Index");
        if ('@TempData["returnMsgType"]' == 'error') {
            toastr.error('@TempData["returnMsg"]');
        }
    })
    </script>
}
