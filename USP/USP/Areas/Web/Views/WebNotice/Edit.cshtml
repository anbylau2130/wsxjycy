
@model USP.Models.Entity.WebNotice
@{
    ViewBag.Title = "Edit";
}

@section themes{
    @*<link href="~/Static/Css/shop/usp.webnotice.edit.css" rel="stylesheet" />*@
}

<div id="p" class="easyui-panel" style="width: 100%; height: 100%">
    <div class="panel panel-info">
        <div class="panel-heading">
            完善公司信息
            <button id="btnReturn" type="button" class="btn btn-primary btn-xs pull-right">返回</button>
        </div>
        <div class="panel-body panel-fit">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form form-horizontal" role="form">
                    <fieldset id="flt-baseInfo">
                        <legend>基础信息</legend>
                        <div class="form-group">
                            @Html.HiddenFor(model => model.ID, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(model => model.Reserve, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(model => model.Creator, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(model => model.CreateTime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(model => model.Auditor, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(model => model.AuditTime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(model => model.Canceler, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.HiddenFor(model => model.CancelTime, new { htmlAttributes = new { @class = "form-control" } })
                            <div class="form-group" id="fg-Title">
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group" id="fg-BroweCount">
                                @Html.LabelFor(model => model.BroweCount, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.BroweCount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.BroweCount, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group" id="fg-Content">
                                @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.TextAreaFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group" id="fg-Remark">
                                @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </fieldset>

                    <div class="form-group form-actions">
                        <div class="col-md-offset-2 col-xs-4 ">
                            <button type="submit" class="btn btn-primary">保存</button>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
@section scripts{
    @*<script src="~/Static/Js/usp.webnotice.edit.js"></script>*@

    <script type="text/javascript">
     (function () {
    usp.namespace("usp.webnotice.edit");
    usp.webnotice.edit = {
        init: function (btnReturnId, basePage) {
            $(".datepicker").datetimepicker({
                format: 'YYYY-MM-DD'
            });

            usp.webnotice.edit.eventInit.btnReturnInit(btnReturnId, basePage);
        },
        eventInit: {
            btnReturnInit: function (id, basePage) {
                $(id).on("click", function () {
                    location.href = basePage;
                    return false;
                });
            }
        },
    }
})(this);
        $(function () {
            usp.init();
            KindEditor.ready(function (K) {
                window.editor = K.create("#Content", {
                    resizeType: 1,
                    allowPreviewEmoticons: false,
                    allowImageUpload: true,//允许上传图片
                    allowFileManager: true, //允许对上传图片进行管理
                    uploadJson: '../../KindEdit/Upload', //上传图片的java代码，只不过放在jsp中
                    fileManagerJson: '../../KindEdit/FileManager',
                    afterUpload: function () { this.sync(); }, //图片上传后，将上传内容同步到textarea中
                    afterBlur: function () { this.sync(); },   ////失去焦点时，将上传内容同步到textarea中
                    items: [
                        'source', '|', 'undo', 'redo', '|', 'preview', 'print', 'template', 'code', 'cut', 'copy', 'paste',
                        'plainpaste', 'wordpaste', '|', 'justifyleft', 'justifycenter', 'justifyright',
                         'insertorderedlist', 'insertunorderedlist', 'indent', 'outdent', 'subscript',
                        'superscript', 'clearhtml', 'quickformat', 'selectall', '|', 'fullscreen', '/',
                        'formatblock', 'fontname', 'fontsize', '|', 'forecolor', 'hilitecolor', 'bold',
                        'italic', 'underline', 'strikethrough', 'lineheight', 'removeformat', '|', 'image', 'multiimage',
                        'flash', 'media', 'insertfile', 'table', 'hr', 'emoticons', 'baidumap', 'pagebreak',
                        'anchor', 'link', 'unlink', 'justifyfull', ]
                });
            });
            usp.webnotice.edit.init(
                "#btnReturn",
                "/Web/WebNotice/Index"
                );
            if ('@TempData["isSuccess"]' == 'false') {
                toastr.error('@TempData["MessageInfo"]');
            }
        })
    </script>
}


